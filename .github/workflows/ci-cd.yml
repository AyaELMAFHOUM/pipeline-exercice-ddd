name: Java CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test_scouting:
    name: Test Scouting, SonarQube, Docker Build & Push
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: scoutingdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: tmpPass
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build with Maven
        run: |
          mvn -f scouting-service/pom.xml clean verify

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        run: |
          mvn -f scouting-service/pom.xml sonar:sonar \
            -Dsonar.projectKey=scouting-service \
            -Dsonar.host.url=https://cf65-105-66-7-93.ngrok-free.app \
            -Dsonar.login=$SONAR_TOKEN

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/scouting-service:latest ./scouting-service

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/scouting-service:latest

